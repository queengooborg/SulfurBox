/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vdscratchy.sulfurbox.gui;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

/**
 *
 * @author brand
 */
public class SulfurBoxGui extends javax.swing.JFrame {

    private Properties properties = new Properties();

    /**
     * Creates new form SulfurBoxGui
     */
    public SulfurBoxGui() {
        loadProperties();
        initComponents();
        initLAFMenu();
        pack();
    }

    //TODO Create a proper global properties handler
    private void loadProperties() {
        try {
            File propertyFile = new File("properties");
            if (!propertyFile.exists()) {
                propertyFile.createNewFile();
            }
            properties.load(new FileInputStream(propertyFile));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

        try {
            UIManager.setLookAndFeel(properties.getProperty("laf", "com.bulenkov.darcula.DarculaLaf"));
            SwingUtilities.updateComponentTreeUI(SulfurBoxGui.this);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This is done runtime rather then hard coded into the gui so that it can support all installed LAF's including OS dependent LAF's
     * ps. LAF = LookAndFeel
     */
    private void initLAFMenu() {
        ButtonGroup btnGroup = new ButtonGroup();

        for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
            JRadioButtonMenuItem laf = new JRadioButtonMenuItem(info.getName());
            btnGroup.add(laf);
            lafMenu.add(laf);

            if (UIManager.getLookAndFeel().getName().equals(info.getName())) {
                laf.setSelected(true);
            }

            laf.addActionListener(event -> {
                try {
                    properties.setProperty("laf", info.getClassName());
                    properties.store(new FileOutputStream("properties"), "Props //TODO create a proper global properties file");

                    UIManager.setLookAndFeel(info.getClassName());
                    SwingUtilities.updateComponentTreeUI(SulfurBoxGui.this);
                    if (info.getName().equals("Metal")) {
                        JOptionPane.showMessageDialog(SulfurBoxGui.this, "A restart may be required to correctly apply this change.", "Info", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(SulfurBoxGui.this, "Something when wrong while setting new look and feel!\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ideButtonGroup = new ButtonGroup();
        jTabbedPane1 = new JTabbedPane();
        modPanel = new JPanel();
        modNameField = new JTextField();
        modPackageField = new JTextField();
        jLabel2 = new JLabel();
        modPackageExtField = new JTextField();
        modVersionField = new JTextField();
        jLabel1 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        mcVersionSelect = new JComboBox<>();
        forgeVersionSelect = new JComboBox<>();
        jLabel5 = new JLabel();
        jScrollPane1 = new JScrollPane();
        jTextArea1 = new JTextArea();
        jLabel6 = new JLabel();
        jComboBox3 = new JComboBox<>();
        modHomePageField = new JTextField();
        jLabel7 = new JLabel();
        modRepoField = new JTextField();
        jLabel8 = new JLabel();
        modUpdateChecksField = new JTextField();
        jLabel9 = new JLabel();
        modCurseIDField = new JTextField();
        modLicenseField = new JComboBox<>();
        modLogoField = new JTextField();
        modLogoBrowsButton = new JButton();
        jLabel10 = new JLabel();
        jLabel11 = new JLabel();
        jLabel12 = new JLabel();
        issueTrackerField = new JTextField();
        jLabel21 = new JLabel();
        attribPanel = new JPanel();
        jScrollPane2 = new JScrollPane();
        atribContrubuterTable = new JTable();
        atribAddContributer = new JButton();
        atribRemoveContributer = new JButton();
        jLabel15 = new JLabel();
        jScrollPane3 = new JScrollPane();
        atribCreditsTextBox = new JTextArea();
        depPanel = new JPanel();
        jLabel22 = new JLabel();
        atribParantModCheck1 = new JCheckBox();
        atribParentModField1 = new JTextField();
        jPanel13 = new JPanel();
        jLabel23 = new JLabel();
        atribRemModDep1 = new JButton();
        atribAddModDep1 = new JButton();
        jScrollPane7 = new JScrollPane();
        depModDepTable = new JTable();
        jPanel14 = new JPanel();
        jLabel24 = new JLabel();
        atribRemJavaDep1 = new JButton();
        atribAddJavaDep1 = new JButton();
        jScrollPane8 = new JScrollPane();
        depJavaDepList = new JList<>();
        jPanel15 = new JPanel();
        jLabel25 = new JLabel();
        atribRemMavenRepo1 = new JButton();
        atribAddRepo1 = new JButton();
        jScrollPane9 = new JScrollPane();
        depMavenRepoList = new JList<>();
        jPanel16 = new JPanel();
        jLabel26 = new JLabel();
        atribAddManifest1 = new JButton();
        atribRemManifest1 = new JButton();
        jScrollPane10 = new JScrollPane();
        depManifestList = new JList<>();
        jPanel4 = new JPanel();
        intellijRadButton = new JRadioButton();
        eclipseRadButton = new JRadioButton();
        jLabel14 = new JLabel();
        jLabel13 = new JLabel();
        jPanel6 = new JPanel();
        modGenerateButton = new JButton();
        filler1 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(32767, 0));
        filler2 = new Box.Filler(new Dimension(0, 0), new Dimension(0, 0), new Dimension(32767, 0));
        menuBar = new JMenuBar();
        fileMenu = new JMenu();
        menuItemNew = new JMenuItem();
        menuItemOpen = new JMenuItem();
        menuItemSave = new JMenuItem();
        menuItemSaveAs = new JMenuItem();
        jSeparator1 = new JPopupMenu.Separator();
        menuItemExit = new JMenuItem();
        editMenu = new JMenu();
        menuItemCopy = new JMenuItem();
        menuItemCut = new JMenuItem();
        menuItemPaste = new JMenuItem();
        menuItemSelectAll = new JMenuItem();
        menuItemDeselect = new JMenuItem();
        projectMenu = new JMenu();
        menuItemGenerate = new JMenuItem();
        menuItemClean = new JMenuItem();
        menuItemCompileJar = new JMenuItem();
        aboutMenu = new JMenu();
        menuItemAboutSB = new JMenuItem();
        menuItemManual = new JMenuItem();
        menuItemOnlineSupport = new JMenuItem();
        menuItemCheckUpdates = new JMenuItem();
        menuItemRequestRepo = new JMenuItem();
        optionsMenu = new JMenu();
        lafMenu = new JMenu();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("SulfurBox");
        setMinimumSize(new Dimension(400, 690));

        modPanel.setBorder(BorderFactory.createEtchedBorder());

        modNameField.setText("Test Mod");
        modNameField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                modNameFieldActionPerformed(evt);
            }
        });

        modPackageField.setText("mods.badhandwriting.org");
        modPackageField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                modPackageFieldActionPerformed(evt);
            }
        });

        jLabel2.setText(".");

        modPackageExtField.setText("testmod");
        modPackageExtField.setMaximumSize(new Dimension(73, 24));
        modPackageExtField.setMinimumSize(new Dimension(73, 24));
        modPackageExtField.setName(""); // NOI18N

        modVersionField.setText("0.0.1.# - DEV");

        jLabel1.setText("Name");

        jLabel3.setText("Package");

        jLabel4.setText("Version");

        mcVersionSelect.setModel(new DefaultComboBoxModel<>(new String[] { "MC 1.11.2" }));
        mcVersionSelect.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mcVersionSelectActionPerformed(evt);
            }
        });

        forgeVersionSelect.setModel(new DefaultComboBoxModel<>(new String[] { "13.20.10.2228 - Recommended" }));

        jLabel5.setText("Forge Version");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel6.setText("Description");

        jComboBox3.setModel(new DefaultComboBoxModel<>(new String[] { "https://", "http://" }));

        modHomePageField.setText("www.???.org");
        modHomePageField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                modHomePageFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Home Page");

        modRepoField.setText("https://github.com/brandon3055/Draconic-Evolution");

        jLabel8.setText("Repository");

        modUpdateChecksField.setText("www.blablabla.com/stuff");

        jLabel9.setText("Update Checks");

        modCurseIDField.setText("907694083706973409786");
        modCurseIDField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                modCurseIDFieldActionPerformed(evt);
            }
        });

        modLicenseField.setModel(new DefaultComboBoxModel<>(new String[] { "GNU GPL V3.0" }));

        modLogoField.setText("resources/textures/logo.png");

        modLogoBrowsButton.setText("Brows");
        modLogoBrowsButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                modLogoBrowsButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("CurseForge ID");

        jLabel11.setText("License");

        jLabel12.setText("Logo File");

        issueTrackerField.setText("https://github.com/brandon3055/Draconic-Evolution/issues");

        jLabel21.setText("Issue Tracker");

        GroupLayout modPanelLayout = new GroupLayout(modPanel);
        modPanel.setLayout(modPanelLayout);
        modPanelLayout.setHorizontalGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(modPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel12, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel6, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(modRepoField, GroupLayout.Alignment.TRAILING)
                    .addGroup(modPanelLayout.createSequentialGroup()
                        .addComponent(modPackageField)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modPackageExtField, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE))
                    .addComponent(modNameField)
                    .addComponent(modVersionField)
                    .addGroup(modPanelLayout.createSequentialGroup()
                        .addComponent(mcVersionSelect, GroupLayout.PREFERRED_SIZE, 115, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(forgeVersionSelect, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addComponent(modUpdateChecksField)
                    .addComponent(modCurseIDField)
                    .addComponent(modLicenseField, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(modPanelLayout.createSequentialGroup()
                        .addComponent(modLogoField)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modLogoBrowsButton))
                    .addGroup(modPanelLayout.createSequentialGroup()
                        .addComponent(jComboBox3, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modHomePageField))
                    .addComponent(issueTrackerField, GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
                .addContainerGap())
        );
        modPanelLayout.setVerticalGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(modPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modNameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modPackageField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(modPackageExtField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modVersionField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(mcVersionSelect, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(forgeVersionSelect, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modHomePageField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modRepoField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(issueTrackerField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modUpdateChecksField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modCurseIDField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modLicenseField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(modLogoField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(modLogoBrowsButton)
                    .addComponent(jLabel12))
                .addGap(8, 8, 8))
        );

        jTabbedPane1.addTab("Mod Info", modPanel);

        atribContrubuterTable.setModel(new DefaultTableModel(
            new Object [][] {
                { "//TODO", "//TODO", "//TODO", "//TODO"}
            },
            new String [] {
                "", "Name", "Username", "Role"
            }
        )
        {
            Class[] types = new Class [] {
                Boolean.class, String.class, String.class
            };

            public Class getColumnClass(int column) {
                Object c = getValueAt(0, column);
                return c == null ? String.class : c.getClass();
            }
        });
        jScrollPane2.setViewportView(atribContrubuterTable);

        atribAddContributer.setText("+");
        atribAddContributer.setToolTipText("Add Contributer");

        atribRemoveContributer.setText("x");
        atribRemoveContributer.setToolTipText("Remove Selected");
        atribRemoveContributer.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atribRemoveContributerActionPerformed(evt);
            }
        });

        jLabel15.setText("Credits");

        atribCreditsTextBox.setColumns(20);
        atribCreditsTextBox.setRows(5);
        jScrollPane3.setViewportView(atribCreditsTextBox);

        GroupLayout attribPanelLayout = new GroupLayout(attribPanel);
        attribPanel.setLayout(attribPanelLayout);
        attribPanelLayout.setHorizontalGroup(attribPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(attribPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(attribPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(attribPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atribAddContributer)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atribRemoveContributer))
                    .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE))
                .addContainerGap())
        );
        attribPanelLayout.setVerticalGroup(attribPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(attribPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 258, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(attribPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(atribRemoveContributer, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
                    .addComponent(atribAddContributer, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Attribution", attribPanel);

        depPanel.setBorder(BorderFactory.createEtchedBorder());

        jLabel22.setText("Parent Mod");

        jPanel13.setBorder(BorderFactory.createEtchedBorder());

        jLabel23.setText("Mod Dependencies");

        atribRemModDep1.setText("x");
        atribRemModDep1.setToolTipText("Remove Selected");
        atribRemModDep1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atribRemModDep1ActionPerformed(evt);
            }
        });

        atribAddModDep1.setText("+");
        atribAddModDep1.setToolTipText("Add New");

        depModDepTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mod Name", "Required Version"
            }
        ) {
            Class[] types = new Class [] {
                String.class, String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        depModDepTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(depModDepTable);
        if (depModDepTable.getColumnModel().getColumnCount() > 0) {
            depModDepTable.getColumnModel().getColumn(0).setPreferredWidth(200);
            depModDepTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        GroupLayout jPanel13Layout = new GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(jPanel13Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(atribAddModDep1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atribRemModDep1))
                    .addComponent(jLabel23, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(jPanel13Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(atribRemModDep1, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
                    .addComponent(atribAddModDep1, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel14.setBorder(BorderFactory.createEtchedBorder());

        jLabel24.setText("Java Dependencies");

        atribRemJavaDep1.setText("x");
        atribRemJavaDep1.setToolTipText("Remove Selected");
        atribRemJavaDep1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atribRemJavaDep1ActionPerformed(evt);
            }
        });

        atribAddJavaDep1.setText("+");
        atribAddJavaDep1.setToolTipText("Add New");

        depJavaDepList.setModel(new AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        depJavaDepList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(depJavaDepList);

        GroupLayout jPanel14Layout = new GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(jPanel14Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addComponent(jLabel24, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(atribAddJavaDep1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atribRemJavaDep1)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(jPanel14Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(atribRemJavaDep1, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
                    .addComponent(atribAddJavaDep1, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel15.setBorder(BorderFactory.createEtchedBorder());

        jLabel25.setText("Maven Repositories");

        atribRemMavenRepo1.setText("x");
        atribRemMavenRepo1.setToolTipText("Remove Selected");
        atribRemMavenRepo1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atribRemMavenRepo1ActionPerformed(evt);
            }
        });

        atribAddRepo1.setText("+");
        atribAddRepo1.setToolTipText("Add New");

        depMavenRepoList.setModel(new AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        depMavenRepoList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane9.setViewportView(depMavenRepoList);

        GroupLayout jPanel15Layout = new GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(jPanel15Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(atribAddRepo1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(atribRemMavenRepo1)))
                        .addContainerGap())))
        );
        jPanel15Layout.setVerticalGroup(jPanel15Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(atribRemMavenRepo1, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
                    .addComponent(atribAddRepo1, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel16.setBorder(BorderFactory.createEtchedBorder());

        jLabel26.setText("Manifest");

        atribAddManifest1.setText("+");
        atribAddManifest1.setToolTipText("Add New");

        atribRemManifest1.setText("x");
        atribRemManifest1.setToolTipText("Remove Selected");
        atribRemManifest1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atribRemManifest1ActionPerformed(evt);
            }
        });

        depManifestList.setModel(new AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        depManifestList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane10.setViewportView(depManifestList);

        GroupLayout jPanel16Layout = new GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(jPanel16Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10)
                    .addComponent(jLabel26, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(atribAddManifest1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atribRemManifest1)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(jPanel16Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(atribRemManifest1, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
                    .addComponent(atribAddManifest1, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        GroupLayout depPanelLayout = new GroupLayout(depPanel);
        depPanel.setLayout(depPanelLayout);
        depPanelLayout.setHorizontalGroup(depPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(depPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addGap(34, 34, 34)
                .addComponent(atribParantModCheck1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atribParentModField1)
                .addContainerGap())
            .addGroup(GroupLayout.Alignment.TRAILING, depPanelLayout.createSequentialGroup()
                .addGroup(depPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel15, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(depPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        depPanelLayout.setVerticalGroup(depPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(depPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(depPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(atribParantModCheck1)
                    .addGroup(depPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(atribParentModField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(depPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(depPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Dependencies", depPanel);

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 718, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 541, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Support", jPanel4);

        intellijRadButton.setText("IntelliJ");

        eclipseRadButton.setText("Eclips");
        eclipseRadButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                eclipseRadButtonActionPerformed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(SwingConstants.TRAILING);
        jLabel14.setText("Gradle 3.14");

        jLabel13.setHorizontalAlignment(SwingConstants.TRAILING);
        jLabel13.setText("Java 9.232");

        modGenerateButton.setText("Generate");
        modGenerateButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                modGenerateButtonActionPerformed(evt);
            }
        });

        GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(filler2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(modGenerateButton, GroupLayout.PREFERRED_SIZE, 133, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filler1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(filler1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(filler2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(modGenerateButton)
                .addGap(15, 15, 15))
        );

        fileMenu.setText("File");

        menuItemNew.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_MASK));
        menuItemNew.setText("New");
        menuItemNew.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                menuItemNewActionPerformed(evt);
            }
        });
        fileMenu.add(menuItemNew);

        menuItemOpen.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, InputEvent.CTRL_MASK));
        menuItemOpen.setText("Open");
        fileMenu.add(menuItemOpen);

        menuItemSave.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, InputEvent.CTRL_MASK));
        menuItemSave.setText("Save");
        fileMenu.add(menuItemSave);

        menuItemSaveAs.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, InputEvent.ALT_MASK | InputEvent.CTRL_MASK));
        menuItemSaveAs.setText("Save As");
        fileMenu.add(menuItemSaveAs);
        fileMenu.add(jSeparator1);

        menuItemExit.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, InputEvent.ALT_MASK));
        menuItemExit.setText("Exit");
        fileMenu.add(menuItemExit);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        menuItemCopy.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_MASK));
        menuItemCopy.setText("Copy");
        menuItemCopy.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                menuItemCopyActionPerformed(evt);
            }
        });
        editMenu.add(menuItemCopy);

        menuItemCut.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_MASK));
        menuItemCut.setText("Cut");
        menuItemCut.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                menuItemCutActionPerformed(evt);
            }
        });
        editMenu.add(menuItemCut);

        menuItemPaste.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V, InputEvent.CTRL_MASK));
        menuItemPaste.setText("Paste");
        editMenu.add(menuItemPaste);

        menuItemSelectAll.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, InputEvent.CTRL_MASK));
        menuItemSelectAll.setText("Select All");
        menuItemSelectAll.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                menuItemSelectAllActionPerformed(evt);
            }
        });
        editMenu.add(menuItemSelectAll);

        menuItemDeselect.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, InputEvent.ALT_MASK | InputEvent.CTRL_MASK));
        menuItemDeselect.setText("Deselect");
        editMenu.add(menuItemDeselect);

        menuBar.add(editMenu);

        projectMenu.setText("Project");

        menuItemGenerate.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_G, InputEvent.CTRL_MASK));
        menuItemGenerate.setText("Generate");
        projectMenu.add(menuItemGenerate);

        menuItemClean.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_BACK_SPACE, InputEvent.SHIFT_MASK | InputEvent.CTRL_MASK));
        menuItemClean.setText("Clean");
        menuItemClean.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                menuItemCleanActionPerformed(evt);
            }
        });
        projectMenu.add(menuItemClean);

        menuItemCompileJar.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_G, InputEvent.SHIFT_MASK | InputEvent.CTRL_MASK));
        menuItemCompileJar.setText("Compile Jar");
        projectMenu.add(menuItemCompileJar);

        menuBar.add(projectMenu);

        aboutMenu.setText("About");

        menuItemAboutSB.setText("About SulfurBox");
        aboutMenu.add(menuItemAboutSB);

        menuItemManual.setText("Manual");
        menuItemManual.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                menuItemManualActionPerformed(evt);
            }
        });
        aboutMenu.add(menuItemManual);

        menuItemOnlineSupport.setText("Online Support");
        menuItemOnlineSupport.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                menuItemOnlineSupportActionPerformed(evt);
            }
        });
        aboutMenu.add(menuItemOnlineSupport);

        menuItemCheckUpdates.setText("Check For Updates");
        aboutMenu.add(menuItemCheckUpdates);

        menuItemRequestRepo.setText("Request Maven Repo");
        menuItemRequestRepo.setToolTipText("Request to Add Maven Mod Repository");
        aboutMenu.add(menuItemRequestRepo);

        menuBar.add(aboutMenu);

        optionsMenu.setText("Options");

        lafMenu.setText("Look And Feel");
        optionsMenu.add(lafMenu);

        menuBar.add(optionsMenu);

        setJMenuBar(menuBar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(eclipseRadButton, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                            .addComponent(intellijRadButton, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eclipseRadButton)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(intellijRadButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)))))
                .addContainerGap())
        );

        ideButtonGroup.add(intellijRadButton);
        ideButtonGroup.add(eclipseRadButton);
    }// </editor-fold>//GEN-END:initComponents

    private void atribRemManifest1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atribRemManifest1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atribRemManifest1ActionPerformed

    private void atribRemMavenRepo1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atribRemMavenRepo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atribRemMavenRepo1ActionPerformed

    private void atribRemJavaDep1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atribRemJavaDep1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atribRemJavaDep1ActionPerformed

    private void atribRemModDep1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atribRemModDep1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atribRemModDep1ActionPerformed

    private void atribRemoveContributerActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atribRemoveContributerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atribRemoveContributerActionPerformed

    private void modLogoBrowsButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_modLogoBrowsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modLogoBrowsButtonActionPerformed

    private void modCurseIDFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_modCurseIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modCurseIDFieldActionPerformed

    private void modHomePageFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_modHomePageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modHomePageFieldActionPerformed

    private void mcVersionSelectActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mcVersionSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mcVersionSelectActionPerformed

    private void modPackageFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_modPackageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modPackageFieldActionPerformed

    private void modNameFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_modNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modNameFieldActionPerformed

    private void modGenerateButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_modGenerateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modGenerateButtonActionPerformed

    private void eclipseRadButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_eclipseRadButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eclipseRadButtonActionPerformed

    private void menuItemCopyActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menuItemCopyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemCopyActionPerformed

    private void menuItemCleanActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menuItemCleanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemCleanActionPerformed

    private void menuItemSelectAllActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menuItemSelectAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemSelectAllActionPerformed

    private void menuItemOnlineSupportActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menuItemOnlineSupportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemOnlineSupportActionPerformed

    private void menuItemManualActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menuItemManualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemManualActionPerformed

    private void menuItemNewActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menuItemNewActionPerformed
        // TODO add your handling code here:
        System.out.println("New button pressed!");
    }//GEN-LAST:event_menuItemNewActionPerformed

    private void menuItemCutActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menuItemCutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemCutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JMenu aboutMenu;
    private JButton atribAddContributer;
    private JButton atribAddJavaDep1;
    private JButton atribAddManifest1;
    private JButton atribAddModDep1;
    private JButton atribAddRepo1;
    private JTable atribContrubuterTable;
    private JTextArea atribCreditsTextBox;
    private JCheckBox atribParantModCheck1;
    private JTextField atribParentModField1;
    private JButton atribRemJavaDep1;
    private JButton atribRemManifest1;
    private JButton atribRemMavenRepo1;
    private JButton atribRemModDep1;
    private JButton atribRemoveContributer;
    private JPanel attribPanel;
    private JList<String> depJavaDepList;
    private JList<String> depManifestList;
    private JList<String> depMavenRepoList;
    private JTable depModDepTable;
    private JPanel depPanel;
    private JRadioButton eclipseRadButton;
    private JMenu editMenu;
    private JMenu fileMenu;
    private Box.Filler filler1;
    private Box.Filler filler2;
    private JComboBox<String> forgeVersionSelect;
    private ButtonGroup ideButtonGroup;
    private JRadioButton intellijRadButton;
    private JTextField issueTrackerField;
    private JComboBox<String> jComboBox3;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel2;
    private JLabel jLabel21;
    private JLabel jLabel22;
    private JLabel jLabel23;
    private JLabel jLabel24;
    private JLabel jLabel25;
    private JLabel jLabel26;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel13;
    private JPanel jPanel14;
    private JPanel jPanel15;
    private JPanel jPanel16;
    private JPanel jPanel4;
    private JPanel jPanel6;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane10;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JScrollPane jScrollPane7;
    private JScrollPane jScrollPane8;
    private JScrollPane jScrollPane9;
    private JPopupMenu.Separator jSeparator1;
    private JTabbedPane jTabbedPane1;
    private JTextArea jTextArea1;
    private JMenu lafMenu;
    private JComboBox<String> mcVersionSelect;
    private JMenuBar menuBar;
    private JMenuItem menuItemAboutSB;
    private JMenuItem menuItemCheckUpdates;
    private JMenuItem menuItemClean;
    private JMenuItem menuItemCompileJar;
    private JMenuItem menuItemCopy;
    private JMenuItem menuItemCut;
    private JMenuItem menuItemDeselect;
    private JMenuItem menuItemExit;
    private JMenuItem menuItemGenerate;
    private JMenuItem menuItemManual;
    private JMenuItem menuItemNew;
    private JMenuItem menuItemOnlineSupport;
    private JMenuItem menuItemOpen;
    private JMenuItem menuItemPaste;
    private JMenuItem menuItemRequestRepo;
    private JMenuItem menuItemSave;
    private JMenuItem menuItemSaveAs;
    private JMenuItem menuItemSelectAll;
    private JTextField modCurseIDField;
    private JButton modGenerateButton;
    private JTextField modHomePageField;
    private JComboBox<String> modLicenseField;
    private JButton modLogoBrowsButton;
    private JTextField modLogoField;
    private JTextField modNameField;
    private JTextField modPackageExtField;
    private JTextField modPackageField;
    private JPanel modPanel;
    private JTextField modRepoField;
    private JTextField modUpdateChecksField;
    private JTextField modVersionField;
    private JMenu optionsMenu;
    private JMenu projectMenu;
    // End of variables declaration//GEN-END:variables
}
